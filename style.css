/* /!\ You need to add vendor prefixes in order to render the CSS properly (or simply use http://leaverou.github.io/prefixfree/) /!\ */ #tridiv {
    perspective: 800px;
    position: absolute;
    overflow: hidden;
    width: 100%;
    height: 100%;
    background: transparent;
    font-size: 150%;
  }
  .face {
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.4);
  }
  .scene, .shape, .face, .face-wrapper, .cr {
    position: absolute;
    transform-style: preserve-3d;
  }
  .scene {
    width: 80em;
    height: 80em;
    top: 50%;
    left: 50%;
    margin: -40em 0 0 -40em;
  }
  .shape {
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform-origin: 50%;
  }
  .face, .face-wrapper {
    overflow: hidden;
    transform-origin: 0 0;
    backface-visibility: hidden;
    /* hidden by default, prevent blinking and other weird rendering glitchs */
  }
  .face {
    background-size: 100% 100%!important;
    background-position: center;
  }
  .face-wrapper .face {
    left: 100%;
    width: 100%;
    height: 100%
  }
  .photon-shader {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%
  }
  .side {
    left: 50%;
  }
  .cr, .cr .side {
    height: 100%;
  }
  [class*="cuboid"] .ft, [class*="cuboid"] .bk {
    width: 100%;
    height: 100%;
  }
  [class*="cuboid"] .bk {
    left: 100%;
  }
  [class*="cuboid"] .rt {
    transform: rotateY(-90deg) translateX(-50%);
  }
  [class*="cuboid"] .lt {
    transform: rotateY(90deg) translateX(-50%);
  }
  [class*="cuboid"] .tp {
    transform: rotateX(90deg) translateY(-50%);
  }
  [class*="cuboid"] .bm {
    transform: rotateX(-90deg) translateY(-50%);
  }
  [class*="cuboid"] .lt {
    left: 100%;
  }
  [class*="cuboid"] .bm {
    top: 100%;
  }
  /* .cub-1 styles */
  .cub-1 {
    transform:translate3D(0em, 0em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:15em;
    height:3em;
    margin:-1.5em 0 0 -7.5em;
  }
  .cub-1 .ft {
    transform:translateZ(1.5em);
  }
  .cub-1 .bk {
    transform:translateZ(-1.5em) rotateY(180deg);
  }
  .cub-1 .rt, .cub-1 .lt {
    width:3em;
    height:3em;
  }
  .cub-1 .tp, .cub-1 .bm {
    width:15em;
    height:3em;
  }
  .cub-1 .face {
    background-color:#959595;
  }
  /* .cub-2 styles */
  .cub-2 {
    transform:translate3D(-9.5em, 0em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:2em;
    height:5em;
    margin:-2.5em 0 0 -1em;
  }
  .cub-2 .ft {
    transform:translateZ(2.5em);
  }
  .cub-2 .bk {
    transform:translateZ(-2.5em) rotateY(180deg);
  }
  .cub-2 .rt, .cub-2 .lt {
    width:5em;
    height:5em;
  }
  .cub-2 .tp, .cub-2 .bm {
    width:2em;
    height:5em;
  }
  .cub-2 .face {
    background-color:#fc9c7c;
  }
  /* .cub-3 styles */
  .cub-3 {
    transform:translate3D(9.5em, 0em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:2em;
    height:5em;
    margin:-2.5em 0 0 -1em;
  }
  .cub-3 .ft {
    transform:translateZ(2.5em);
  }
  .cub-3 .bk {
    transform:translateZ(-2.5em) rotateY(180deg);
  }
  .cub-3 .rt, .cub-3 .lt {
    width:5em;
    height:5em;
  }
  .cub-3 .tp, .cub-3 .bm {
    width:2em;
    height:5em;
  }
  .cub-3 .face {
    background-color:#7cd9fc;
  }
  .cub-3 .lt {
    background:url(https://i.imgur.com/FRBHN2L.png);
  }
  /* .cub-4 styles */
  .cub-4 {
    transform:translate3D(0em, 0em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:6em;
    height:6em;
    margin:-3em 0 0 -3em;
  }
  .cub-4 .ft {
    transform:translateZ(3em);
  }
  .cub-4 .bk {
    transform:translateZ(-3em) rotateY(180deg);
  }
  .cub-4 .rt, .cub-4 .lt {
    width:6em;
    height:6em;
  }
  .cub-4 .tp, .cub-4 .bm {
    width:6em;
    height:6em;
  }
  .cub-4 .face {
    background-color:#959595;
  }
  .cub-4 .tp {
    background-color:#ecd34a;
  }
  .cub-4 .bm {
    background-color:#66e870;
  }
  .cub-4 .ft {
    width:6em;
    margin-left:0em;
  }
  .cub-4 .bk {
    width:6em;
    margin-left:0em;
  }
  .cub-4 .rt, .cub-4 .lt {
    width:6em;
  }
  .cub-4 .tp, .cub-4 .bm, .cub-4 .tp .photon-shader, .cub-4 .bm .photon-shader {
    border-radius:0em;
  }
  .cub-4 .cr {
    width:0em;
    left:0em;
  }
  .cub-4 .cr-0 {
    transform: translate3D(6em, 0, 3em);
  }
  .cub-4 .cr-1 {
    transform: translate3D(6em, 0, -3em);
  }
  .cub-4 .cr-2 {
    transform: translate3D(0, 0, -3em);
  }
  .cub-4 .cr-3 {
    transform: translate3D(0, 0, 3em);
  }
  .cub-4 .cr-0 .s0 {
    transform: rotateY(15deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-0 .s1 {
    transform: rotateY(45deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-0 .s2 {
    transform: rotateY(75deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-1 .s0 {
    transform: rotateY(105deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-1 .s1 {
    transform: rotateY(135deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-1 .s2 {
    transform: rotateY(165deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-2 .s0 {
    transform: rotateY(195deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-2 .s1 {
    transform: rotateY(225deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-2 .s2 {
    transform: rotateY(255deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-3 .s0 {
    transform: rotateY(285deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-3 .s1 {
    transform: rotateY(315deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .cr-3 .s2 {
    transform: rotateY(345deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-4 .side {
    width:0.025em;
  }